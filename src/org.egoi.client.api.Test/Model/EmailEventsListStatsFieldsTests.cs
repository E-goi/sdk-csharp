/* 
 * APIv3 (Beta)
 *
 *  # Introduction Just a quick peek!!! This is our new version of API. Remember, it is not stable yet!!! But we invite you play with it and give us your feedback ;) # Getting Started  E-goi can be integrated with many environments and programming languages via our REST API. We've created a developer focused portal to give your organization a clear and quick overview of how to integrate with E-goi. The developer portal focuses on scenarios for integration and flow of events. We recommend familiarizing yourself with all of the content in the developer portal, before start using our rest API.   The E-goi  APIv3 is served over HTTPS. To ensure data privacy, unencrypted HTTP is not supported.  Request data is passed to the API by POSTing JSON objects to the API endpoints with the appropriate parameters.   BaseURL = api.egoiapp.com  # RESTful Services This API supports 5 HTTP methods:  * <b>GET</b>: The HTTP GET method is used to **read** (or retrieve) a representation of a resource. * <b>POST</b>: The POST verb is most-often utilized to **create** new resources. * <b>PATCH</b>: PATCH is used for **modify** capabilities. The PATCH request only needs to contain the changes to the resource, not the complete resource * <b>PUT</b>: PUT is most-often utilized for **update** capabilities, PUT-ing to a known resource URI with the request body containing the newly-updated representation of the original resource. * <b>DELETE</b>: DELETE is pretty easy to understand. It is used to **delete** a resource identified by a URI.  # Authentication   We use a custom authentication method, you will need a apikey that you can find in your account settings. Below you will see a curl example to get your account information:  #!/bin/bash  curl -X GET 'https://api.egoiapp.com/my-account' \\  -H 'accept: application/json' \\  -H 'Apikey: <YOUR_APY_KEY>'  Here you can see a curl Post example with authentication:  #!/bin/bash  curl -X POST 'http://api.egoiapp.com/tags' \\  -H 'accept: application/json' \\  -H 'Apikey: <YOUR_APY_KEY>' \\  -H 'Content-Type: application/json' \\  -d '{`name`:`Your custom tag`,`color`:`#FFFFFF`}'  # SDK Get started quickly with E-goi with our integration tools. Our SDK is a modern open source library that makes it easy to integrate your application with E-goi services. * <b><a href='https://github.com/E-goi/sdk-java'>Java</a></b> * <b><a href='https://github.com/E-goi/sdk-php'>PHP</a></b> * <b><a href='https://github.com/E-goi/sdk-python'>Python</a></b>  <security-definitions/>
 *
 * OpenAPI spec version: 3.0.0-beta
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using org.egoi.client.api.Api;
using org.egoi.client.api.Model;
using org.egoi.client.api.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace org.egoi.client.api.Test
{
    /// <summary>
    ///  Class for testing EmailEventsListStatsFields
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class EmailEventsListStatsFieldsTests
    {
        // TODO uncomment below to declare an instance variable for EmailEventsListStatsFields
        //private EmailEventsListStatsFields instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of EmailEventsListStatsFields
            //instance = new EmailEventsListStatsFields();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of EmailEventsListStatsFields
        /// </summary>
        [Test]
        public void EmailEventsListStatsFieldsInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" EmailEventsListStatsFields
            //Assert.IsInstanceOfType<EmailEventsListStatsFields> (instance, "variable 'instance' is a EmailEventsListStatsFields");
        }


        /// <summary>
        /// Test the property 'Opens'
        /// </summary>
        [Test]
        public void OpensTest()
        {
            // TODO unit test for the property 'Opens'
        }
        /// <summary>
        /// Test the property 'Clicks'
        /// </summary>
        [Test]
        public void ClicksTest()
        {
            // TODO unit test for the property 'Clicks'
        }
        /// <summary>
        /// Test the property 'Complaints'
        /// </summary>
        [Test]
        public void ComplaintsTest()
        {
            // TODO unit test for the property 'Complaints'
        }
        /// <summary>
        /// Test the property 'Unsubscribes'
        /// </summary>
        [Test]
        public void UnsubscribesTest()
        {
            // TODO unit test for the property 'Unsubscribes'
        }
        /// <summary>
        /// Test the property 'Bounces'
        /// </summary>
        [Test]
        public void BouncesTest()
        {
            // TODO unit test for the property 'Bounces'
        }
        /// <summary>
        /// Test the property 'Forwards'
        /// </summary>
        [Test]
        public void ForwardsTest()
        {
            // TODO unit test for the property 'Forwards'
        }
        /// <summary>
        /// Test the property 'ForwardsConversion'
        /// </summary>
        [Test]
        public void ForwardsConversionTest()
        {
            // TODO unit test for the property 'ForwardsConversion'
        }
        /// <summary>
        /// Test the property 'FbLikes'
        /// </summary>
        [Test]
        public void FbLikesTest()
        {
            // TODO unit test for the property 'FbLikes'
        }
        /// <summary>
        /// Test the property 'FbShares'
        /// </summary>
        [Test]
        public void FbSharesTest()
        {
            // TODO unit test for the property 'FbShares'
        }
        /// <summary>
        /// Test the property 'TwShares'
        /// </summary>
        [Test]
        public void TwSharesTest()
        {
            // TODO unit test for the property 'TwShares'
        }
        /// <summary>
        /// Test the property 'SocialShares'
        /// </summary>
        [Test]
        public void SocialSharesTest()
        {
            // TODO unit test for the property 'SocialShares'
        }

    }

}
